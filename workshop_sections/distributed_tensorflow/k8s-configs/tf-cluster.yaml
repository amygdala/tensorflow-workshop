# Copyright 2016 Google Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
kind: ConfigMap
apiVersion: v1
metadata:
    name: tensorflow-cluster-config
    namespace: default
data:
    clusterconfig: >
        {
            "ps": [
                "ps-0.default.svc.cluster.local:8080",
                "ps-1.default.svc.cluster.local:8080",
                "ps-2.default.svc.cluster.local:8080",
                "ps-3.default.svc.cluster.local:8080",
                "ps-4.default.svc.cluster.local:8080",
                "ps-5.default.svc.cluster.local:8080",
                "ps-6.default.svc.cluster.local:8080",
                "ps-7.default.svc.cluster.local:8080",
            ],
            "worker": [
                "worker-0.default.svc.cluster.local:8080",
                "worker-1.default.svc.cluster.local:8080",
                "worker-2.default.svc.cluster.local:8080",
                "worker-3.default.svc.cluster.local:8080",
                "worker-4.default.svc.cluster.local:8080",
                "worker-5.default.svc.cluster.local:8080",
                "worker-6.default.svc.cluster.local:8080",
                "worker-7.default.svc.cluster.local:8080",
                "worker-8.default.svc.cluster.local:8080",
                "worker-9.default.svc.cluster.local:8080",
                "worker-10.default.svc.cluster.local:8080",
                "worker-11.default.svc.cluster.local:8080",
                "worker-12.default.svc.cluster.local:8080",
                "worker-13.default.svc.cluster.local:8080",
                "worker-14.default.svc.cluster.local:8080",
                "worker-15.default.svc.cluster.local:8080",
            ],
        }
---
kind: Service
apiVersion: v1
metadata:
  name: ps-0
  namespace: default
spec:
  ports:
    - port: 8080
      name: grpc-server
  selector:
    job: ps
    task: '0'
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: ps-0
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      job: ps
      task: '0'
  template:
    metadata:
      labels:
        job: ps
        task: '0'
    spec:
      containers:
        - name: tf-grpc-server
          image: gcr.io/google-samples/tf-worker-example:latest
          ports:
            - name: grpc-server
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: CLUSTER_CONFIG
              valueFrom:
                  configMapKeyRef:
                      name: tensorflow-cluster-config
                      key: clusterconfig
          volumeMounts:
            - name: tensorflow-fs
              mountPath: /var/tensorflow
      volumes:
        - name: tensorflow-fs
          persistentVolumeClaim:
            claimName: tensorflow-fs
---
kind: Service
apiVersion: v1
metadata:
  name: ps-1
  namespace: default
spec:
  ports:
    - port: 8080
      name: grpc-server
  selector:
    job: ps
    task: '1'
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: ps-1
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      job: ps
      task: '1'
  template:
    metadata:
      labels:
        job: ps
        task: '1'
    spec:
      containers:
        - name: tf-grpc-server
          image: gcr.io/google-samples/tf-worker-example:latest
          ports:
            - name: grpc-server
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: CLUSTER_CONFIG
              valueFrom:
                  configMapKeyRef:
                      name: tensorflow-cluster-config
                      key: clusterconfig
          volumeMounts:
            - name: tensorflow-fs
              mountPath: /var/tensorflow
      volumes:
        - name: tensorflow-fs
          persistentVolumeClaim:
            claimName: tensorflow-fs
---
kind: Service
apiVersion: v1
metadata:
  name: ps-2
  namespace: default
spec:
  ports:
    - port: 8080
      name: grpc-server
  selector:
    job: ps
    task: '2'
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: ps-2
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      job: ps
      task: '2'
  template:
    metadata:
      labels:
        job: ps
        task: '2'
    spec:
      containers:
        - name: tf-grpc-server
          image: gcr.io/google-samples/tf-worker-example:latest
          ports:
            - name: grpc-server
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: CLUSTER_CONFIG
              valueFrom:
                  configMapKeyRef:
                      name: tensorflow-cluster-config
                      key: clusterconfig
          volumeMounts:
            - name: tensorflow-fs
              mountPath: /var/tensorflow
      volumes:
        - name: tensorflow-fs
          persistentVolumeClaim:
            claimName: tensorflow-fs
---
kind: Service
apiVersion: v1
metadata:
  name: ps-3
  namespace: default
spec:
  ports:
    - port: 8080
      name: grpc-server
  selector:
    job: ps
    task: '3'
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: ps-3
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      job: ps
      task: '3'
  template:
    metadata:
      labels:
        job: ps
        task: '3'
    spec:
      containers:
        - name: tf-grpc-server
          image: gcr.io/google-samples/tf-worker-example:latest
          ports:
            - name: grpc-server
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: CLUSTER_CONFIG
              valueFrom:
                  configMapKeyRef:
                      name: tensorflow-cluster-config
                      key: clusterconfig
          volumeMounts:
            - name: tensorflow-fs
              mountPath: /var/tensorflow
      volumes:
        - name: tensorflow-fs
          persistentVolumeClaim:
            claimName: tensorflow-fs
---
kind: Service
apiVersion: v1
metadata:
  name: ps-4
  namespace: default
spec:
  ports:
    - port: 8080
      name: grpc-server
  selector:
    job: ps
    task: '4'
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: ps-4
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      job: ps
      task: '4'
  template:
    metadata:
      labels:
        job: ps
        task: '4'
    spec:
      containers:
        - name: tf-grpc-server
          image: gcr.io/google-samples/tf-worker-example:latest
          ports:
            - name: grpc-server
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: CLUSTER_CONFIG
              valueFrom:
                  configMapKeyRef:
                      name: tensorflow-cluster-config
                      key: clusterconfig
          volumeMounts:
            - name: tensorflow-fs
              mountPath: /var/tensorflow
      volumes:
        - name: tensorflow-fs
          persistentVolumeClaim:
            claimName: tensorflow-fs
---
kind: Service
apiVersion: v1
metadata:
  name: ps-5
  namespace: default
spec:
  ports:
    - port: 8080
      name: grpc-server
  selector:
    job: ps
    task: '5'
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: ps-5
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      job: ps
      task: '5'
  template:
    metadata:
      labels:
        job: ps
        task: '5'
    spec:
      containers:
        - name: tf-grpc-server
          image: gcr.io/google-samples/tf-worker-example:latest
          ports:
            - name: grpc-server
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: CLUSTER_CONFIG
              valueFrom:
                  configMapKeyRef:
                      name: tensorflow-cluster-config
                      key: clusterconfig
          volumeMounts:
            - name: tensorflow-fs
              mountPath: /var/tensorflow
      volumes:
        - name: tensorflow-fs
          persistentVolumeClaim:
            claimName: tensorflow-fs
---
kind: Service
apiVersion: v1
metadata:
  name: ps-6
  namespace: default
spec:
  ports:
    - port: 8080
      name: grpc-server
  selector:
    job: ps
    task: '6'
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: ps-6
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      job: ps
      task: '6'
  template:
    metadata:
      labels:
        job: ps
        task: '6'
    spec:
      containers:
        - name: tf-grpc-server
          image: gcr.io/google-samples/tf-worker-example:latest
          ports:
            - name: grpc-server
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: CLUSTER_CONFIG
              valueFrom:
                  configMapKeyRef:
                      name: tensorflow-cluster-config
                      key: clusterconfig
          volumeMounts:
            - name: tensorflow-fs
              mountPath: /var/tensorflow
      volumes:
        - name: tensorflow-fs
          persistentVolumeClaim:
            claimName: tensorflow-fs
---
kind: Service
apiVersion: v1
metadata:
  name: ps-7
  namespace: default
spec:
  ports:
    - port: 8080
      name: grpc-server
  selector:
    job: ps
    task: '7'
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: ps-7
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      job: ps
      task: '7'
  template:
    metadata:
      labels:
        job: ps
        task: '7'
    spec:
      containers:
        - name: tf-grpc-server
          image: gcr.io/google-samples/tf-worker-example:latest
          ports:
            - name: grpc-server
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: CLUSTER_CONFIG
              valueFrom:
                  configMapKeyRef:
                      name: tensorflow-cluster-config
                      key: clusterconfig
          volumeMounts:
            - name: tensorflow-fs
              mountPath: /var/tensorflow
      volumes:
        - name: tensorflow-fs
          persistentVolumeClaim:
            claimName: tensorflow-fs
---
kind: Service
apiVersion: v1
metadata:
  name: worker-0
  namespace: default
spec:
  ports:
    - port: 8080
      name: grpc-server
  selector:
    job: worker
    task: '0'
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: worker-0
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      job: worker
      task: '0'
  template:
    metadata:
      labels:
        job: worker
        task: '0'
    spec:
      containers:
        - name: tf-grpc-server
          image: gcr.io/google-samples/tf-worker-example:latest
          ports:
            - name: grpc-server
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: CLUSTER_CONFIG
              valueFrom:
                  configMapKeyRef:
                      name: tensorflow-cluster-config
                      key: clusterconfig
          volumeMounts:
            - name: tensorflow-fs
              mountPath: /var/tensorflow
      volumes:
        - name: tensorflow-fs
          persistentVolumeClaim:
            claimName: tensorflow-fs
---
kind: Service
apiVersion: v1
metadata:
  name: worker-1
  namespace: default
spec:
  ports:
    - port: 8080
      name: grpc-server
  selector:
    job: worker
    task: '1'
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: worker-1
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      job: worker
      task: '1'
  template:
    metadata:
      labels:
        job: worker
        task: '1'
    spec:
      containers:
        - name: tf-grpc-server
          image: gcr.io/google-samples/tf-worker-example:latest
          ports:
            - name: grpc-server
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: CLUSTER_CONFIG
              valueFrom:
                  configMapKeyRef:
                      name: tensorflow-cluster-config
                      key: clusterconfig
          volumeMounts:
            - name: tensorflow-fs
              mountPath: /var/tensorflow
      volumes:
        - name: tensorflow-fs
          persistentVolumeClaim:
            claimName: tensorflow-fs
---
kind: Service
apiVersion: v1
metadata:
  name: worker-2
  namespace: default
spec:
  ports:
    - port: 8080
      name: grpc-server
  selector:
    job: worker
    task: '2'
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: worker-2
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      job: worker
      task: '2'
  template:
    metadata:
      labels:
        job: worker
        task: '2'
    spec:
      containers:
        - name: tf-grpc-server
          image: gcr.io/google-samples/tf-worker-example:latest
          ports:
            - name: grpc-server
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: CLUSTER_CONFIG
              valueFrom:
                  configMapKeyRef:
                      name: tensorflow-cluster-config
                      key: clusterconfig
          volumeMounts:
            - name: tensorflow-fs
              mountPath: /var/tensorflow
      volumes:
        - name: tensorflow-fs
          persistentVolumeClaim:
            claimName: tensorflow-fs
---
kind: Service
apiVersion: v1
metadata:
  name: worker-3
  namespace: default
spec:
  ports:
    - port: 8080
      name: grpc-server
  selector:
    job: worker
    task: '3'
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: worker-3
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      job: worker
      task: '3'
  template:
    metadata:
      labels:
        job: worker
        task: '3'
    spec:
      containers:
        - name: tf-grpc-server
          image: gcr.io/google-samples/tf-worker-example:latest
          ports:
            - name: grpc-server
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: CLUSTER_CONFIG
              valueFrom:
                  configMapKeyRef:
                      name: tensorflow-cluster-config
                      key: clusterconfig
          volumeMounts:
            - name: tensorflow-fs
              mountPath: /var/tensorflow
      volumes:
        - name: tensorflow-fs
          persistentVolumeClaim:
            claimName: tensorflow-fs
---
kind: Service
apiVersion: v1
metadata:
  name: worker-4
  namespace: default
spec:
  ports:
    - port: 8080
      name: grpc-server
  selector:
    job: worker
    task: '4'
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: worker-4
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      job: worker
      task: '4'
  template:
    metadata:
      labels:
        job: worker
        task: '4'
    spec:
      containers:
        - name: tf-grpc-server
          image: gcr.io/google-samples/tf-worker-example:latest
          ports:
            - name: grpc-server
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: CLUSTER_CONFIG
              valueFrom:
                  configMapKeyRef:
                      name: tensorflow-cluster-config
                      key: clusterconfig
          volumeMounts:
            - name: tensorflow-fs
              mountPath: /var/tensorflow
      volumes:
        - name: tensorflow-fs
          persistentVolumeClaim:
            claimName: tensorflow-fs
---
kind: Service
apiVersion: v1
metadata:
  name: worker-5
  namespace: default
spec:
  ports:
    - port: 8080
      name: grpc-server
  selector:
    job: worker
    task: '5'
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: worker-5
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      job: worker
      task: '5'
  template:
    metadata:
      labels:
        job: worker
        task: '5'
    spec:
      containers:
        - name: tf-grpc-server
          image: gcr.io/google-samples/tf-worker-example:latest
          ports:
            - name: grpc-server
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: CLUSTER_CONFIG
              valueFrom:
                  configMapKeyRef:
                      name: tensorflow-cluster-config
                      key: clusterconfig
          volumeMounts:
            - name: tensorflow-fs
              mountPath: /var/tensorflow
      volumes:
        - name: tensorflow-fs
          persistentVolumeClaim:
            claimName: tensorflow-fs
---
kind: Service
apiVersion: v1
metadata:
  name: worker-6
  namespace: default
spec:
  ports:
    - port: 8080
      name: grpc-server
  selector:
    job: worker
    task: '6'
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: worker-6
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      job: worker
      task: '6'
  template:
    metadata:
      labels:
        job: worker
        task: '6'
    spec:
      containers:
        - name: tf-grpc-server
          image: gcr.io/google-samples/tf-worker-example:latest
          ports:
            - name: grpc-server
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: CLUSTER_CONFIG
              valueFrom:
                  configMapKeyRef:
                      name: tensorflow-cluster-config
                      key: clusterconfig
          volumeMounts:
            - name: tensorflow-fs
              mountPath: /var/tensorflow
      volumes:
        - name: tensorflow-fs
          persistentVolumeClaim:
            claimName: tensorflow-fs
---
kind: Service
apiVersion: v1
metadata:
  name: worker-7
  namespace: default
spec:
  ports:
    - port: 8080
      name: grpc-server
  selector:
    job: worker
    task: '7'
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: worker-7
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      job: worker
      task: '7'
  template:
    metadata:
      labels:
        job: worker
        task: '7'
    spec:
      containers:
        - name: tf-grpc-server
          image: gcr.io/google-samples/tf-worker-example:latest
          ports:
            - name: grpc-server
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: CLUSTER_CONFIG
              valueFrom:
                  configMapKeyRef:
                      name: tensorflow-cluster-config
                      key: clusterconfig
          volumeMounts:
            - name: tensorflow-fs
              mountPath: /var/tensorflow
      volumes:
        - name: tensorflow-fs
          persistentVolumeClaim:
            claimName: tensorflow-fs
---
kind: Service
apiVersion: v1
metadata:
  name: worker-8
  namespace: default
spec:
  ports:
    - port: 8080
      name: grpc-server
  selector:
    job: worker
    task: '8'
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: worker-8
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      job: worker
      task: '8'
  template:
    metadata:
      labels:
        job: worker
        task: '8'
    spec:
      containers:
        - name: tf-grpc-server
          image: gcr.io/google-samples/tf-worker-example:latest
          ports:
            - name: grpc-server
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: CLUSTER_CONFIG
              valueFrom:
                  configMapKeyRef:
                      name: tensorflow-cluster-config
                      key: clusterconfig
          volumeMounts:
            - name: tensorflow-fs
              mountPath: /var/tensorflow
      volumes:
        - name: tensorflow-fs
          persistentVolumeClaim:
            claimName: tensorflow-fs
---
kind: Service
apiVersion: v1
metadata:
  name: worker-9
  namespace: default
spec:
  ports:
    - port: 8080
      name: grpc-server
  selector:
    job: worker
    task: '9'
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: worker-9
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      job: worker
      task: '9'
  template:
    metadata:
      labels:
        job: worker
        task: '9'
    spec:
      containers:
        - name: tf-grpc-server
          image: gcr.io/google-samples/tf-worker-example:latest
          ports:
            - name: grpc-server
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: CLUSTER_CONFIG
              valueFrom:
                  configMapKeyRef:
                      name: tensorflow-cluster-config
                      key: clusterconfig
          volumeMounts:
            - name: tensorflow-fs
              mountPath: /var/tensorflow
      volumes:
        - name: tensorflow-fs
          persistentVolumeClaim:
            claimName: tensorflow-fs
---
kind: Service
apiVersion: v1
metadata:
  name: worker-10
  namespace: default
spec:
  ports:
    - port: 8080
      name: grpc-server
  selector:
    job: worker
    task: '10'
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: worker-10
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      job: worker
      task: '10'
  template:
    metadata:
      labels:
        job: worker
        task: '10'
    spec:
      containers:
        - name: tf-grpc-server
          image: gcr.io/google-samples/tf-worker-example:latest
          ports:
            - name: grpc-server
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: CLUSTER_CONFIG
              valueFrom:
                  configMapKeyRef:
                      name: tensorflow-cluster-config
                      key: clusterconfig
          volumeMounts:
            - name: tensorflow-fs
              mountPath: /var/tensorflow
      volumes:
        - name: tensorflow-fs
          persistentVolumeClaim:
            claimName: tensorflow-fs
---
kind: Service
apiVersion: v1
metadata:
  name: worker-11
  namespace: default
spec:
  ports:
    - port: 8080
      name: grpc-server
  selector:
    job: worker
    task: '11'
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: worker-11
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      job: worker
      task: '11'
  template:
    metadata:
      labels:
        job: worker
        task: '11'
    spec:
      containers:
        - name: tf-grpc-server
          image: gcr.io/google-samples/tf-worker-example:latest
          ports:
            - name: grpc-server
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: CLUSTER_CONFIG
              valueFrom:
                  configMapKeyRef:
                      name: tensorflow-cluster-config
                      key: clusterconfig
          volumeMounts:
            - name: tensorflow-fs
              mountPath: /var/tensorflow
      volumes:
        - name: tensorflow-fs
          persistentVolumeClaim:
            claimName: tensorflow-fs
---
kind: Service
apiVersion: v1
metadata:
  name: worker-12
  namespace: default
spec:
  ports:
    - port: 8080
      name: grpc-server
  selector:
    job: worker
    task: '12'
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: worker-12
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      job: worker
      task: '12'
  template:
    metadata:
      labels:
        job: worker
        task: '12'
    spec:
      containers:
        - name: tf-grpc-server
          image: gcr.io/google-samples/tf-worker-example:latest
          ports:
            - name: grpc-server
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: CLUSTER_CONFIG
              valueFrom:
                  configMapKeyRef:
                      name: tensorflow-cluster-config
                      key: clusterconfig
          volumeMounts:
            - name: tensorflow-fs
              mountPath: /var/tensorflow
      volumes:
        - name: tensorflow-fs
          persistentVolumeClaim:
            claimName: tensorflow-fs
---
kind: Service
apiVersion: v1
metadata:
  name: worker-13
  namespace: default
spec:
  ports:
    - port: 8080
      name: grpc-server
  selector:
    job: worker
    task: '13'
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: worker-13
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      job: worker
      task: '13'
  template:
    metadata:
      labels:
        job: worker
        task: '13'
    spec:
      containers:
        - name: tf-grpc-server
          image: gcr.io/google-samples/tf-worker-example:latest
          ports:
            - name: grpc-server
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: CLUSTER_CONFIG
              valueFrom:
                  configMapKeyRef:
                      name: tensorflow-cluster-config
                      key: clusterconfig
          volumeMounts:
            - name: tensorflow-fs
              mountPath: /var/tensorflow
      volumes:
        - name: tensorflow-fs
          persistentVolumeClaim:
            claimName: tensorflow-fs
---
kind: Service
apiVersion: v1
metadata:
  name: worker-14
  namespace: default
spec:
  ports:
    - port: 8080
      name: grpc-server
  selector:
    job: worker
    task: '14'
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: worker-14
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      job: worker
      task: '14'
  template:
    metadata:
      labels:
        job: worker
        task: '14'
    spec:
      containers:
        - name: tf-grpc-server
          image: gcr.io/google-samples/tf-worker-example:latest
          ports:
            - name: grpc-server
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: CLUSTER_CONFIG
              valueFrom:
                  configMapKeyRef:
                      name: tensorflow-cluster-config
                      key: clusterconfig
          volumeMounts:
            - name: tensorflow-fs
              mountPath: /var/tensorflow
      volumes:
        - name: tensorflow-fs
          persistentVolumeClaim:
            claimName: tensorflow-fs
---
kind: Service
apiVersion: v1
metadata:
  name: worker-15
  namespace: default
spec:
  ports:
    - port: 8080
      name: grpc-server
  selector:
    job: worker
    task: '15'
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: worker-15
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      job: worker
      task: '15'
  template:
    metadata:
      labels:
        job: worker
        task: '15'
    spec:
      containers:
        - name: tf-grpc-server
          image: gcr.io/google-samples/tf-worker-example:latest
          ports:
            - name: grpc-server
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: CLUSTER_CONFIG
              valueFrom:
                  configMapKeyRef:
                      name: tensorflow-cluster-config
                      key: clusterconfig
          volumeMounts:
            - name: tensorflow-fs
              mountPath: /var/tensorflow
      volumes:
        - name: tensorflow-fs
          persistentVolumeClaim:
            claimName: tensorflow-fs
---
